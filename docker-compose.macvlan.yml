version: '3.8'

# Docker Compose configuration for VuIO with macvlan network support
# This configuration is useful when you need VuIO to appear as a separate
# device on your network for better DLNA/UPnP compatibility

services:
  vuio:
    image: ghcr.io/vuiodev/vuio:latest
    container_name: vuio-server
    restart: unless-stopped
    
    # Use macvlan network for direct network access
    # This makes the container appear as a separate device on your network
    networks:
      - vuio-macvlan
      - default  # Also connect to bridge for management
    
    volumes:
      # Persist configuration and database
      - ./vuio-config:/config
      # Mount your media library (adjust path as needed)
      - ./my-media:/media
      
    environment:
      # User/Group ID mapping - IMPORTANT: Change these to match your host user
      - PUID=1000  # Run 'id -u' to find your user ID
      - PGID=1000  # Run 'id -g' to find your group ID
      
      # Application configuration
      - VUIO_PORT=8080
      - VUIO_MEDIA_DIR=/media
      - VUIO_SERVER_NAME=VuIO
      - VUIO_BIND_INTERFACE=0.0.0.0
      
      # IMPORTANT: Set this to your macvlan interface name
      # Common names: eth0, enp0s3, br-macvlan
      # Use 'docker network inspect vuio-macvlan' to check
      - VUIO_SSDP_INTERFACE=eth0
    
    # Expose ports (needed when not using host networking)
    ports:
      - "8080:8080/tcp"
      - "1900:1900/udp"

networks:
  # Define macvlan network
  # IMPORTANT: You need to create this network first:
  # docker network create -d macvlan \
  #   --subnet=192.168.1.0/24 \
  #   --gateway=192.168.1.1 \
  #   -o parent=eth0 \
  #   vuio-macvlan
  vuio-macvlan:
    external: true

# Instructions for setting up macvlan network:
#
# 1. Find your network interface:
#    ip route | grep default
#
# 2. Find your network subnet and gateway:
#    ip route show
#
# 3. Create the macvlan network (adjust values for your network):
#    docker network create -d macvlan \
#      --subnet=192.168.1.0/24 \
#      --gateway=192.168.1.1 \
#      --ip-range=192.168.1.240/28 \
#      -o parent=eth0 \
#      vuio-macvlan
#
# 4. Update VUIO_SSDP_INTERFACE to match your parent interface
#
# 5. Start the container:
#    docker-compose -f docker-compose.macvlan.yml up -d
#
# Note: The container will get its own IP address on your network.
# You can find it with: docker inspect vuio-server | grep IPAddress