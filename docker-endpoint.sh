#!/bin/sh
set -e

CONFIG_FILE="/config/config.toml"

# Create config directory if it doesn't exist
mkdir -p "$(dirname "$CONFIG_FILE")"

# Read existing UUID if present, so it's persisted across container restarts if /config is a volume.
UUID=""
if [ -f "$CONFIG_FILE" ]; then
    UUID=$(grep '^uuid' "$CONFIG_FILE" | sed 's/uuid = "\(.*\)"/\1/')
fi

# Create the config file. This overwrites the file on every start to ensure it's up-to-date with env vars.
cat > "$CONFIG_FILE" <<EOF
# This file is auto-generated by docker-entrypoint.sh on container start.
# Do not edit this file directly. Use environment variables instead.

[server]
port = ${VUIO_PORT:-8080}
interface = "${VUIO_BIND_INTERFACE:-0.0.0.0}"
name = "${VUIO_SERVER_NAME:-VuIO}"
EOF

# Append UUID if it exists, otherwise the app will generate a new one.
if [ -n "$UUID" ]; then
    echo "uuid = \"$UUID\"" >> "$CONFIG_FILE"
fi

# Continue with the rest of the config
cat >> "$CONFIG_FILE" <<EOF

[network]
ssdp_port = 1900
multicast_ttl = 4
announce_interval_seconds = 300
EOF

# Handle network interface selection for SSDP
if [ "$VUIO_SSDP_INTERFACE" = "Auto" ] || [ "$VUIO_SSDP_INTERFACE" = "All" ]; then
    echo "interface_selection = { type = \"$VUIO_SSDP_INTERFACE\" }" >> "$CONFIG_FILE"
else
    echo "interface_selection = { type = \"Specific\", value = \"$VUIO_SSDP_INTERFACE\" }" >> "$CONFIG_FILE"
fi

cat >> "$CONFIG_FILE" <<EOF

[media]
scan_on_startup = true
watch_for_changes = true
cleanup_deleted_files = true
supported_extensions = [
    "mp4", "mkv", "avi", "mov", "wmv", "flv", "webm", "m4v", "mpg", "mpeg", "3gp", "ogv",
    "mp3", "flac", "wav", "aac", "ogg", "wma", "m4a", "opus", "ape",
    "jpg", "jpeg", "png", "gif", "bmp", "webp", "tiff", "svg"
]

[[media.directories]]
path = "${VUIO_MEDIA_DIR:-/media}"
recursive = true

[database]
path = "/config/media.db"
vacuum_on_startup = false
backup_enabled = true
EOF

echo "Configuration generated in $CONFIG_FILE"
cat "$CONFIG_FILE"

# Execute the command passed to the entrypoint (the CMD from the Dockerfile).
exec "$@"